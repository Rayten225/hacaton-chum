# Generated by Django 4.2.11 on 2024-12-20 05:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models
import users.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, max_length=128, null=True, verbose_name='Имя пользователя')),
                ('password', models.CharField(error_messages={'required': 'Пожалуйста, заполните поле пароля.'}, max_length=128, verbose_name='Пароль')),
                ('email', models.EmailField(error_messages={'required': 'Пожалуйста, заполните поле почты.'}, max_length=254, unique=True, verbose_name='Почта')),
                ('first_name', models.CharField(error_messages={'required': 'Пожалуйста, заполните поле имени.'}, max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(error_messages={'required': 'Пожалуйста, заполните поле фамилии.'}, max_length=100, verbose_name='Фамилия')),
                ('number', models.CharField(blank=True, max_length=100, verbose_name='Номер телефона')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания аккаунта')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Аватар')),
                ('email_confirmed', models.BooleanField(default=False, help_text='Прошел ли пользователь проверку почты после регистрации.', verbose_name='Подтверждение почты')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('code', models.IntegerField(default=users.utils.generate_random_code)),
                ('url', models.CharField(default=users.utils.generate_uuid, editable=False, max_length=36)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Токен-сброс почты',
                'verbose_name_plural': 'Токены-сброса почты',
            },
        ),
        migrations.CreateModel(
            name='EmailVerify',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(default=users.utils.generate_random_code)),
                ('url', models.CharField(default=users.utils.generate_uuid, editable=False, max_length=36)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Токен-верификации почты',
                'verbose_name_plural': 'Токены-верификации почты',
            },
        ),
    ]
